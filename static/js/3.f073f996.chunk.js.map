{"version":3,"sources":["Components/Dialogs/DialogItem/DialogItem.module.css","Components/Dialogs/allMessages/AllMessages.module.css","Components/Dialogs/DialogItem/DialogItem.jsx","Components/Dialogs/allMessages/Message/Message.jsx","Components/Dialogs/allMessages/AllMessages.jsx","Components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","dialogData","path","id","gutter","span","to","className","s","dialogItem","ava","src","imgURL","size","icon","userName","name","userMessage","message","length","Message","SendMessageRF","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","component","InputForm","inputType","inputStyle","flexGrow","resize","rows","type","htmlType","AllMessages","messages","map","m","key","allMessages","formData","sendMessageHandler","Dialogs","messageData","dialogs","dialogElement","d","messageElement","render","sendMessage","diaWithMess","mapStateToPropsForRedirect","state","isAuth","authData","compose","connect","Component","RedirectComponent","this","React"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,IAAM,wBAAwB,SAAW,6BAA6B,YAAc,gCAAgC,QAAU,8B,oBCA5LD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,iBAAmB,wC,oJCwBrEC,EAnBI,SAACC,GAChB,IAAMC,EAAaD,EAAMC,WACnBC,EAAI,mBAAeD,EAAWE,IAEpC,OACI,kBAAC,IAAD,CAAMC,OAAQ,CAAC,EAAE,KACb,kBAAC,IAAD,CAAKC,KAAM,IACP,kBAAC,IAAD,CAASC,GAAIJ,GACT,yBAAKK,UAAWC,IAAEC,YACd,kBAAC,IAAD,CAAQF,UAAWC,IAAEE,IAAKC,IAAKV,EAAWW,OAAQC,KAAM,GAAIC,KAAM,kBAAC,IAAD,QAClE,yBAAKP,UAAWC,IAAEO,UAAU,2BAAId,EAAWe,OAC3C,yBAAKT,UAAWC,IAAES,aAAchB,EAAWiB,QAAQjB,EAAWiB,QAAQC,OAAS,GAA/E,U,kBCHTC,EAVC,SAACpB,GACb,OACI,kBAAC,IAAD,CAAMI,OAAQ,CAAC,EAAE,KACb,kBAAC,IAAD,KACKJ,EAAMkB,W,mCCqBjBG,EAAgBC,YAAU,CAACC,KAAM,eAAjBD,EArBE,SAACtB,GAOrB,OACI,0BAAMwB,SAAUxB,EAAMyB,cAClB,kBAACC,EAAA,EAAD,CAAOC,YAAa,wBACbX,KAAM,UACNY,UAAWC,IACXC,UAAW,WACXC,WAXI,CACfC,SAAS,EACTC,OAAO,QAUIC,KAAM,IAEb,kBAAC,IAAD,CAAQC,KAAM,UAAYC,SAAU,UAApC,YA2BGC,EApBK,SAACrC,GACjB,IAAMG,EAAKH,EAAMiB,YAAYd,GAOvBmC,EANUtC,EAAMiB,YAAYC,QAMTqB,KAAI,SAACC,GAAD,OAAO,kBAAC,EAAD,CAASC,IAAKD,EAAGtB,QAASsB,OAE9D,OACI,kBAAC,IAAD,CAAKjC,UAAWC,IAAEkC,aACd,kBAAC,IAAD,KACKJ,GAEL,kBAACjB,EAAD,CAAeG,SAXN,SAACmB,GACd3C,EAAM4C,mBAAmBzC,EAAIwC,EAASzB,c,QCL/B2B,EAvBC,SAAC7C,GACb,IAAM8C,EAAc9C,EAAM+C,QAAQD,YAE5BE,EAAgBF,EAAYP,KAAI,SAAAU,GAAC,OAAK,kBAAC,EAAD,CAAYR,IAAKQ,EAAE9C,GAAIF,WAAYgD,OACzEC,EAAiBJ,EAAYP,KAAI,SAAAC,GAAC,OACpC,kBAAC,IAAD,CAAOC,IAAKD,EAAErC,GAAID,KAAI,mBAAcsC,EAAErC,GAAhB,KACfgD,OAAQ,kBAAM,kBAAC,EAAD,CAAaV,IAAKD,EAAErC,GACPyC,mBAAoB5C,EAAMoD,YAC1BnC,YAAauB,UAGnD,OACI,kBAAC,IAAD,CAAKjC,UAAWC,IAAE6C,YAAajD,OAAQ,IACnC,kBAAC,IAAD,CAAKC,KAAM,GACN2C,GAEL,kBAAC,IAAD,CAAK3C,KAAM,IACN6C,K,iDCpBbI,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,SAASD,S,QCSZE,sBACXC,aARkB,SAACJ,GACnB,MAAO,CACHR,QAASQ,EAAMR,WAMM,CAACK,mBDPE,SAACQ,GAAe,IACtCC,EADqC,uKAGnC,OAAKC,KAAK9D,MAAMwD,OACT,kBAACI,EAAcE,KAAK9D,OADI,kBAAC,IAAD,CAAUM,GAAG,eAHT,GACXyD,IAAMH,WAOtC,OAAOD,YAAQL,EAARK,CAAoCE,KCFhCH,CAGbb","file":"static/js/3.f073f996.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogItem\":\"DialogItem_dialogItem__3vGjt\",\"ava\":\"DialogItem_ava__1VDym\",\"userName\":\"DialogItem_userName__1XVy8\",\"userMessage\":\"DialogItem_userMessage__2si82\",\"navlink\":\"DialogItem_navlink__1q8cz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allMessages\":\"AllMessages_allMessages__1kIYE\",\"sendMessageField\":\"AllMessages_sendMessageField__29ska\"};","import React from \"react\";\r\nimport s from './DialogItem.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Avatar, Col, Row} from \"antd\";\r\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\r\n\r\nconst DialogItem = (props) => {\r\n    const dialogData = props.dialogData;\r\n    const path = `/dialogs/${dialogData.id}`\r\n\r\n    return (\r\n        <Row  gutter={[0,16]}>\r\n            <Col span={24} >\r\n                <NavLink to={path}>\r\n                    <div className={s.dialogItem}>\r\n                        <Avatar className={s.ava} src={dialogData.imgURL} size={50} icon={<UserOutlined />}/>\r\n                        <div className={s.userName}><b>{dialogData.name}</b></div>\r\n                        <div className={s.userMessage}>{dialogData.message[dialogData.message.length - 1]} </div>\r\n                    </div>\r\n                </NavLink>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\n\r\nimport {Col, Row} from \"antd\";\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <Row  gutter={[0,16]}>\r\n            <Col>\r\n                {props.message}\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './AllMessages.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {InputForm} from \"../../common/FormsControls/FormsContorls\";\r\nimport {Button, Col, Row} from \"antd\";\r\n\r\n\r\nconst SendMessageForm = (props) => {\r\n\r\n    const inputStyle = {\r\n        flexGrow:1,\r\n        resize:'none'\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field placeholder={'Enter your message...'}\r\n                   name={'message'}\r\n                   component={InputForm}\r\n                   inputType={'textArea'}\r\n                   inputStyle={inputStyle}\r\n                   rows={3}\r\n            />\r\n            <Button type={\"primary\"}  htmlType={'submit'} >Send</Button>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst SendMessageRF = reduxForm({form: \"sendMessage\"})(SendMessageForm);\r\n\r\nconst AllMessages = (props) => {\r\n    const id = props.userMessage.id;\r\n    const message = props.userMessage.message;\r\n\r\n    const onSubmit = (formData) => {\r\n        props.sendMessageHandler(id, formData.message);\r\n    }\r\n\r\n    const messages = message.map((m) => <Message key={m} message={m}/>)\r\n\r\n    return (\r\n        <Row className={s.allMessages}>\r\n            <Col>\r\n                {messages}\r\n            </Col>\r\n            <SendMessageRF onSubmit={onSubmit}/>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default AllMessages;","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport AllMessages from \"./allMessages/AllMessages\";\r\nimport {Route} from \"react-router\";\r\nimport {Col, Row} from \"antd\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n    const messageData = props.dialogs.messageData;\r\n\r\n    const dialogElement = messageData.map(d => (<DialogItem key={d.id} dialogData={d}/>));\r\n    const messageElement = messageData.map(m => (\r\n        <Route key={m.id} path={`/dialogs/${m.id}/`}\r\n               render={() => <AllMessages key={m.id}\r\n                                          sendMessageHandler={props.sendMessage}\r\n                                          userMessage={m}\r\n               />}\r\n        />));\r\n    return (\r\n        <Row className={s.diaWithMess} gutter={16} >\r\n            <Col span={7} >\r\n                {dialogElement}\r\n            </Col>\r\n            <Col span={17}>\r\n                {messageElement}\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.authData.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}\r\n\r\n","\r\nimport Dialogs from \"./Dialogs\";\r\nimport {sendMessage} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogs\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}