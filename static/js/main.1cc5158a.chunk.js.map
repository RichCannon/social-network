{"version":3,"sources":["Components/Users/User/User.module.css","Components/common/Pagination/Pagination.module.css","Components/Profile/MyPosts/MyPosts.module.css","redux/dialogs-reducer.js","Components/Users/Users.module.css","Components/common/Preloader/Preloader.module.css","Components/common/FormsControls/FormsContorls.js","Components/Header/Header.module.css","assets/img/logo.bmp","Components/common/FormsControls/FormsContorls.module.css","Components/Navbar/Navbar.jsx","Components/News/News.jsx","Components/Music/Music.jsx","Components/Settings/Settings.jsx","Components/common/Pagination/Pagination.jsx","Components/Users/User/User.jsx","Components/Users/Users.jsx","api/api.js","redux/users-reducer.js","Components/common/Preloader/Preloader.jsx","Components/Users/UsersContainer.jsx","utils/validators/validators.js","Components/common/NoData/NoData.jsx","Components/Profile/ProfileInfo/ProfileStatusHooks.jsx","Components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","Components/Profile/ProfileInfo/Profileinfo.jsx","redux/profile-reducer.js","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","Components/Header/Header.jsx","redux/auth-reducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","redux/app-reducer.js","App.js","hoc/withSuspense.js","redux/redux-store.js","index.js","Components/Profile/ProfileInfo/Profileinfo.module.css"],"names":["module","exports","SEND_MESSAGE","initialState","messageData","id","name","imgURL","message","sendMessage","currentMessage","type","dialogsReducer","state","action","map","m","InputForm","input","touched","meta","wrapperCol","inputType","inputStyle","props","isTouched","hasError","error","Item","hasFeedback","validateStatus","help","style","marginBottom","rows","Password","Input","TextArea","formType","CheckboxForm","checkboxDescription","Navbar","Sider","height","position","width","className","mode","theme","key","to","News","Music","Settings","Arrows","direction","s","arrow","Pagination","pageSize","totalCount","currentPage","onPageChanged","buttonsArray","totalPagesAmount","Math","ceil","end","i","push","onClick","User","handlerToggleFollow","followedUsersId","user","Title","Typography","gutter","span","userCont","avaAndFollow","size","src","photos","small","icon","followed","danger","disabled","some","nameAndStatus","level","status","location","Users","usersArray","users","allPages","instance","axios","baseURL","withCredentials","headers","usersAPI","get","then","response","data","userId","post","delete","profileAPI","put","file","formData","FormData","append","profile","authAPI","email","password","rememberMe","captcha","securityAPI","TOGGLE_FOLLOW","SET_USERS","isFetching","toggleFollow","setCurrentPage","setUsers","setTotalUsersCount","toggleIsFetching","followingInProgress","isFollowing","userReducer","u","filter","Preloader","ldsRipple","UsersContainer","pageNumber","getUsers","followStatus","unfollow","follow","this","React","Component","compose","connect","usersPage","dispatch","a","items","resultCode","console","required","value","undefined","maxLength","length","NoData","color","maxlength20","StatusFieldForm","reduxForm","form","editMode","handleSubmit","activateEditMode","onBlur","Field","component","validate","autoFocus","onDoubleClick","placement","title","ProfileStatusHooks","useState","setEditMode","initialValues","onSubmit","updateStatus","myId","currentId","ProfileData","isLookingForAJob","lookingForAJob","profileInfo","lookingForAJobDescription","orientation","Object","keys","contacts","offset","aboutMe","ProfileDataEdit","memo","placeholder","htmlType","ProfileDataEditForm","ProfileInfo","changePhoto","saveProfile","photoLarge","large","marginLeft","avaNameStatus","profileImg","shape","statusAndName","fullName","onChange","e","target","files","onPhotoChange","ADD_POST","SET_STATUS","SET_PHOTO","postData","likeCount","setUserProfile","getUsersProfile","getStatus","profileReducer","postMessage","photo","Post","likeCounter","likes","setLikes","setAction","isLiked","setIsLiked","actions","createElement","LikeFilled","LikeOutlined","boxShadow","borderRadius","padding","paddingLeft","backgroundColor","content","author","avatar","maxLength200","MyPostsFormRedux","myPostField","resize","MyPosts","profilePage","postElements","p","Id","addPost","posts","MyPostsContainer","authData","Profile","getState","profileData","withRouter","isLoading","setIsLoading","match","params","useEffect","Promise","all","history","Header","Layout","HeaderComponent","siteLogo","alt","logo","login","float","logout","isAuth","captchaURL","setUserData","getAuth","getCaptchaURL","url","authReducer","HeaderContainer","maxLength40","LoginReduxForm","description","closable","serverError","stopSubmit","_error","messages","initialized","appReducer","stateCopy","DialogsContainer","lazy","Content","App","initializingProcess","basename","process","minHeight","margin","render","path","Suspense","fallback","exact","from","appData","reducers","combineReducers","dialogs","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1cc5158a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"User_ava__PrVOE\",\"nameAndStatus\":\"User_nameAndStatus__3guBE\",\"avaAndFollow\":\"User_avaAndFollow__DqU7b\",\"userCont\":\"User_userCont__3hm4v\",\"location\":\"User_location__2kUVl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"Pagination_arrow__3jRSn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3rYAx\",\"myPostField\":\"MyPosts_myPostField__3rvZE\"};","const SEND_MESSAGE = 'my-app/dialogs/SEND-MESSAGE';\r\n\r\nlet initialState = { //dialogs\r\n    messageData: [\r\n        {\r\n            id: 1,\r\n            name: 'Jack Stauber',\r\n            imgURL: 'https://7lafa.com/musicians/jack_stauber.jpg',\r\n            message: ['Hello']\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Mac DeMarco',\r\n            imgURL: 'https://media.gq.com/photos/5ca78f84e03e8148480e5219/master/w_1600%2Cc_limit/mac-demarco-gq-may-2019-02.jpg',\r\n            message: [`How ya doin'`]\r\n        }\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            return  {\r\n                ...state,\r\n                messageData: state.messageData.map(m => {\r\n                    if (m.id === action.id) {\r\n                        return {...m, message: [...m.message, action.currentMessage]};\r\n                    } else {\r\n                        return {...m, message: [...m.message]};\r\n                    }\r\n                })\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (id, currentMessage) => ({\r\n    type: SEND_MESSAGE,\r\n    id,\r\n    currentMessage\r\n})\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allPages\":\"Users_allPages__2R9cv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRipple\":\"Preloader_ldsRipple__2C_Jp\"};","import React from \"react\";\r\n/*import styles from \"./FormsContorls.module.css\"*/\r\nimport {Checkbox, Form, Input} from \"antd\";\r\n\r\n\r\n/*export const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError && styles.error)}>\r\n            <input  {...input}   {...props} />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n}*/\r\n\r\nconst formType = ({rows, ...props}, input, inputType, inputStyle) => {\r\n\r\n    const {Password, TextArea} = Input;\r\n    if (inputType === 'input') {\r\n        if (props.type === 'password') {\r\n            return <Password style={inputStyle} {...props} {...input} />\r\n        }\r\n        return <Input style={inputStyle} {...props} {...input}/>\r\n    } else if (inputType === 'textArea') {\r\n        return <TextArea style={inputStyle} rows={rows} {...props} {...input}/>\r\n    }\r\n}\r\n\r\n\r\nexport const InputForm = ({input, touched, meta, wrapperCol, inputType, inputStyle, ...props}) => {\r\n    const isTouched = touched ? true : meta.touched;\r\n    const hasError = meta.error && isTouched;\r\n\r\n    return (\r\n        <Form.Item wrapperCol={wrapperCol}\r\n                   hasFeedback\r\n                   validateStatus={hasError ? 'error' : \"\"}\r\n                   help={hasError && meta.error}\r\n                    style={{marginBottom:'0'}}>\r\n            {formType(props, input, inputType, inputStyle)}\r\n        </Form.Item>\r\n    );\r\n}\r\n\r\n\r\n/*export const TextArea = ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError && styles.error)}>\r\n            <textarea  {...input} {...props} />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n}*/\r\n\r\nexport const CheckboxForm = ({input, ...props}) => {\r\n    return (\r\n        <Form.Item>\r\n            <Checkbox>{props.checkboxDescription}</Checkbox>\r\n        </Form.Item>\r\n    );\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2VqTr\",\"logBut\":\"Header_logBut__2c-G1\",\"siteLogo\":\"Header_siteLogo__372Rg\"};","module.exports = __webpack_public_path__ + \"static/media/logo.c78f9214.bmp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"serverError\":\"FormsContorls_serverError__QysQg\"};","import React from \"react\";\r\n/*import n from './Navbar.module.css';*/\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Menu} from \"antd\";\r\nimport Sider from \"antd/es/layout/Sider\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n\r\n    return (\r\n            <Sider style={{height: '100vh',\r\n                position: 'fixed',}} width={200} className=\"site-layout-background\" mode={'inline'}>\r\n                <Menu theme={'dark'} mode={'inline'}>\r\n                    <Menu.Item key='1'>\r\n                        <NavLink to='/profile'>Profile</NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='2'>\r\n                        <NavLink to='/dialogs'>Messages</NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='3'>\r\n                        <NavLink to='/news'>News</NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='4'>\r\n                        <NavLink to='/music'>Music</NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='5'>\r\n                        <NavLink to='/settings'>Settings</NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='6'>\r\n                        <NavLink to='/users'>Users</NavLink>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>News</div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>Music</div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>Settings</div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport s from \"./Pagination.module.css\";\r\nimport {Button} from 'antd';\r\nimport ArrowLeftOutlined from \"@ant-design/icons/lib/icons/ArrowLeftOutlined\";\r\nimport ArrowRightOutlined from \"@ant-design/icons/lib/icons/ArrowRightOutlined\";\r\n\r\nconst Pagination = ({pageSize, totalCount, currentPage, onPageChanged}) => {\r\n\r\n\r\n    const pagePortion = 3; // + 2\r\n    let buttonsArray = [];\r\n    const totalPagesAmount = Math.ceil(totalCount / pageSize);\r\n    let end = ((currentPage + pagePortion) >= totalPagesAmount) ? totalPagesAmount : currentPage + pagePortion;\r\n    const start = currentPage === 1 ? end++ && 1\r\n        : (currentPage - 1 >= totalPagesAmount - pagePortion ? totalPagesAmount - pagePortion - 1 : currentPage - 1);\r\n    for (let i = start; i <= end; i++) {\r\n\r\n        buttonsArray.push(<Button key={i} type={i === currentPage ? 'primary' : ''}\r\n                                  onClick={() => onPageChanged(i)}>{i}</Button>)\r\n    }\r\n\r\n    return [\r\n        <Button key={'start'} onClick={() => onPageChanged(1)}>{1}</Button>,\r\n        <Arrows direction={'left'}/>,\r\n        ...buttonsArray,\r\n        <Arrows direction={'right'}/>,\r\n        <Button key={'end'} onClick={() => onPageChanged(totalPagesAmount)}>{totalPagesAmount}</Button>,\r\n    ];\r\n\r\n\r\n}\r\n\r\nconst Arrows = ({direction}) => {\r\n    if (direction === 'right') {\r\n        return <ArrowRightOutlined key={'arrowRight'} className={s.arrow}/>\r\n    } else if (direction === 'left') {\r\n        return <ArrowLeftOutlined key={'arrowLeft'} className={s.arrow}/>\r\n    }\r\n}\r\n\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport s from './User.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Avatar, Button, Col, Row, Typography} from \"antd\";\r\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\r\n\r\n\r\n\r\nconst User = ({handlerToggleFollow, followedUsersId, user}) => {\r\n    const {Title} = Typography;\r\n\r\n    return (\r\n        <Row gutter={[0, 24]}  >\r\n            <Col span={24}>\r\n                <div className={s.userCont}>\r\n                    <div className={s.avaAndFollow}>\r\n                        <div>\r\n                            <NavLink to={`/profile/${user.id}`}>\r\n                                <Avatar size={70} src={user.photos.small} icon={<UserOutlined />}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            <Button\r\n                                type={user.followed ? '' : 'primary'}\r\n                                danger={user.followed}\r\n                                disabled={followedUsersId.some(id => id === user.id)}\r\n                                onClick={() => handlerToggleFollow(user.id, user.followed)}>\r\n                                {user.followed ? \"UNFOLLOW\" : \"FOLLOW\"}\r\n                            </Button>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.nameAndStatus}>\r\n                        <Title level={4}>{user.name}</Title>\r\n                        <div>{user.status}</div>\r\n                    </div>\r\n                    <div className={s.location}>\r\n                        <div>{'user.location.city'}</div>\r\n                        <div>{'user.location.country'}</div>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default User;","import React from \"react\";\r\nimport s from './Users.module.css';\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport User from \"./User/User\";\r\nimport {Col, Row} from \"antd\";\r\n\r\n\r\nconst Users = (props) => {\r\n\r\n    const usersArray = props.users.map((user) => {\r\n        return <User key={user.id}\r\n                     handlerToggleFollow={props.handlerToggleFollow}\r\n                     user={user}\r\n                     followedUsersId={props.followedUsersId}/>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Row >\r\n                <Col span={24}>\r\n                    {usersArray}\r\n                </Col>\r\n            </Row>\r\n            <div  className={s.allPages}>\r\n                <Pagination\r\n                    pageSize={props.pageSize}\r\n                    totalCount={props.totalCount}\r\n                    currentPage={props.currentPage}\r\n                    onPageChanged={props.onPageChanged}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'dbf5504c-f2e0-4dbe-bf14-76c4460daab1'\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsersAPI(pageSize, currentPage) {\r\n        return instance.get(`users?count=${pageSize}&page=${currentPage}`)\r\n            .then(response => response.data)\r\n    },\r\n    postFollow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    deleteFollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getUsersProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getStatusAPI(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatusAPI(status) {\r\n        return instance.put('profile/status', {status: status});\r\n    },\r\n    changePhoto(file) {\r\n        const formData = new FormData();\r\n        formData.append('image', file)\r\n        return instance.put('profile/photo', formData, {\r\n            \"Content-Type\": \"multipart/form-data\"\r\n        }).then(response => response.data)\r\n    },\r\n    putProfile(profile) {\r\n        return instance.put('profile',profile)\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuthAPI() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe, captcha) {\r\n        return instance.post('auth/login', {email, password, rememberMe, captcha})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaURL() {\r\n        return instance.get('security/get-captcha-url')\r\n            .then(response => response.data)\r\n    }\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\n\r\nconst TOGGLE_FOLLOW = 'my-app/users/TOGGLE_FOLLOW';\r\nconst SET_USERS = 'my-app/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'my-app/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'my-app/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'my-app/users/TOGGLE_IS_FETCHING';\r\nconst FOLLOWING_IN_PROGRESS = 'my-app/users/FOLLOWING_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalCount: 0, // Amount of all registred users\r\n    pageSize: 5, // Amount of users on 1 page\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followedUsersId: [] // On which users follow/unfollow in progress\r\n}\r\n\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (action.userId === u.id) {\r\n                        return {...u, followed: !u.followed};\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        }\r\n\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case FOLLOWING_IN_PROGRESS: {\r\n\r\n            return {\r\n                ...state,\r\n                followedUsersId: action.isFollowing\r\n                    ? [...state.followedUsersId, action.userId]\r\n                    : [...state.followedUsersId.filter(id => action.userId !== id)]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const toggleFollow = (userId) => ({\r\n    type: TOGGLE_FOLLOW,\r\n    userId\r\n})\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n})\r\n\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n})\r\n\r\nexport const setTotalUsersCount = (totalCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalCount\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({ // Indicator for Preloader\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const followingInProgress = (isFollowing, userId) => ({ // For disabling FOLLOW button\r\n    type: FOLLOWING_IN_PROGRESS,\r\n    isFollowing,\r\n    userId\r\n})\r\n\r\nexport const getUsers = (pageSize, currentPage = 1) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true)); // Enable <Preloader/>\r\n\r\n    let data = await usersAPI.getUsersAPI(pageSize, currentPage);\r\n    dispatch(toggleIsFetching(false)); // Disable <Preloader/>\r\n    dispatch(setUsers(data.items)); // Add users array in state\r\n    dispatch(setTotalUsersCount(data.totalCount)); // Change amount of all registred users\r\n    dispatch(setCurrentPage(currentPage)); // Change number of current page\r\n}\r\n\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    let data = await usersAPI.deleteFollow(userId);\r\n\r\n    if (data.resultCode !== 0) {\r\n        console.error('Server error(deleteFollow)');\r\n        return;\r\n    }\r\n    dispatch(toggleFollow(userId));\r\n    dispatch(followingInProgress(false, userId));\r\n\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        usersAPI.postFollow(userId)\r\n            .then(data => {\r\n                if (data.resultCode !== 0) {\r\n                    console.error('Server error(postFollow)');\r\n                    return;\r\n                }\r\n                dispatch(toggleFollow(userId));\r\n                dispatch(followingInProgress(false, userId));\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default userReducer;","import React from \"react\";\r\nimport s from \"./Preloader.module.css\"\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={s.ldsRipple}>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setCurrentPage,\r\n    setUsers,\r\n    setTotalUsersCount, toggleIsFetching, followingInProgress, getUsers, unfollow, follow\r\n} from \"../../redux/users-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n/*import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";*/\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.pageSize, this.props.currentPage);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(this.props.pageSize, pageNumber);\r\n    }\r\n\r\n   handlerToggleFollow = (userId, followStatus) => {\r\n        this.props.followingInProgress(true, userId);\r\n        if (followStatus) {\r\n            this.props.unfollow(userId);\r\n        } else {\r\n            this.props.follow(userId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            {this.props.isFetching ? <Preloader/> :\r\n                <Users\r\n                    handlerToggleFollow={this.handlerToggleFollow}\r\n                    users={this.props.users}\r\n                    currentPage={this.props.currentPage}\r\n                    totalCount={this.props.totalCount}\r\n                    onPageChanged={this.onPageChanged}\r\n                    pageSize={this.props.pageSize}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    followedUsersId={this.props.followedUsersId}\r\n                    follow = {this.props.follow}\r\n                    unfollow = {this.props.unfollow}\r\n                />}\r\n        </>)\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        totalCount: state.usersPage.totalCount,\r\n\r\n        isFetching: state.usersPage.isFetching,\r\n        followedUsersId: state.usersPage.followedUsersId\r\n    }\r\n}\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleFollow: (userId) => {\r\n            dispatch(toggleFollowAC(userId));\r\n        },\r\n        /!*  unfollow: (userId) => {\r\n              dispatch(unfollowAC(userId));\r\n          },*!/\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (currentPage) => {\r\n            dispatch(setCurrentPageAC(currentPage));\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount));\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching));\r\n        }\r\n\r\n    }\r\n}*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        toggleIsFetching,\r\n        followingInProgress,\r\n        getUsers,\r\n        follow,\r\n        unfollow\r\n    })\r\n)(UsersContainer);\r\n","export const required = (value) => {\r\n    return value ? undefined : 'Field is required';\r\n}\r\n\r\nexport const maxLength = (length) => {\r\n    return (value) => {\r\n        if(!value) return undefined;\r\n        return value.length > length ? `Max length is ${length}` : undefined;\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst NoData = (props) => {\r\n    return (\r\n        <span style={{color: 'lightgray'}}>No data</span>\r\n    );\r\n}\r\n\r\nexport default NoData;","import React, {useState} from \"react\";\r\n\r\nimport {InputForm} from \"../../common/FormsControls/FormsContorls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength} from \"../../../utils/validators/validators\";\r\nimport NoData from \"../../common/NoData/NoData\";\r\nimport {Tooltip} from \"antd\";\r\n\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const deactivateEditMode = (status) => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const activateEditMode = () => {\r\n        if (props.myId !== props.currentId) return;\r\n        setEditMode(true);\r\n    };\r\n\r\n    const onSubmit = (form) => {\r\n        deactivateEditMode(form.status);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <StatusFieldForm initialValues={{status: props.status}} status={props.status} onSubmit={onSubmit}\r\n                             editMode={editMode} activateEditMode={activateEditMode}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst maxlength20 = maxLength(20);\r\n\r\n\r\nconst StatusField = ({editMode, handleSubmit, activateEditMode, status}) => {\r\n    return (<>{\r\n        editMode\r\n            ? <form onBlur={handleSubmit}>\r\n                <Field name={'status'}\r\n                       inputType={'input'}\r\n                       component={InputForm}\r\n                       validate={[maxlength20]}\r\n                       autoFocus={true}\r\n                       touched={true}\r\n                       wrapperCol={{span: 18}}\r\n                /></form>\r\n            : <span onDoubleClick={activateEditMode}>\r\n                      {status\r\n                          ? <Tooltip placement=\"bottom\" title={'Double click to change status'}> {status} </Tooltip>\r\n                          : <NoData/>}\r\n            </span>\r\n    }</>)\r\n}\r\n\r\nconst StatusFieldForm = reduxForm({form: 'status'})(StatusField);\r\n\r\nexport default ProfileStatusHooks;\r\n\r\n/*<Tooltip placement=\"bottom\" title={'Double click to change status'}> </Tooltip>         */","import React from \"react\";\r\nimport s from \"../Profileinfo.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {InputForm, CheckboxForm} from \"../../../common/FormsControls/FormsContorls\";\r\nimport {Divider, Button, Row, Col} from \"antd\";\r\nimport NoData from \"../../../common/NoData/NoData\";\r\n\r\n\r\nexport const ProfileData = ({profile, activateEditMode, currentId, myId}) => {\r\n    let isLookingForAJob;\r\n\r\n    if (profile.lookingForAJob === undefined) {\r\n        isLookingForAJob = <NoData/>\r\n    } else if (profile.lookingForAJob === false) {\r\n        isLookingForAJob = 'No';\r\n    } else if (profile.lookingForAJob === true) {\r\n        isLookingForAJob = 'Yes';\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Row className={s.profileInfo}>\r\n            <Col span={24}>\r\n                <Row>\r\n                    <Col span={10}><b>lookingForAJob: </b></Col> <Col\r\n                    span={14}>{isLookingForAJob}</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={10}> <b>lookingForAJobDescription: </b>\r\n                    </Col>\r\n                    <Col span={14}>\r\n                        {profile.lookingForAJobDescription || <NoData/>}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={24}> <Divider orientation={'left'}>Contacts: </Divider>\r\n                    </Col>\r\n                </Row>\r\n                {Object.keys(profile.contacts).map((key) => {\r\n                    return (\r\n                        <Row key={key}>\r\n                            <Col span={4} offset={3} key={key}>\r\n                                <b>{key}: </b>\r\n                            </Col>\r\n                            <Col span={17}>\r\n                                {profile.contacts[key] || <NoData/>}\r\n                            </Col>\r\n                        </Row>\r\n                    )\r\n                })}\r\n                <Row>\r\n                    <Col span={5}> <b>aboutMe: </b></Col><Col span={10}>{profile.aboutMe || <NoData/>}\r\n                </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        {currentId === myId ?\r\n                            <Button style={{width: '100%'}} onClick={activateEditMode}>EDIT PROFILE</Button> : null}\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\n\r\nconst ProfileDataEdit = React.memo(({handleSubmit, profile}) => {\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <Field name={'fullName'} placeholder={'Full Name'}\r\n                       component={InputForm} inputType={'input'}/> {/*Editing field for fullName*/}\r\n\r\n                <Field name={'lookingForAJob'} type={'checkbox'}\r\n                       checkboxDescription={'lookingForAJob'}\r\n                       component={CheckboxForm}/> {/*Checkbox for lookingForAJob*/}\r\n\r\n                <Field name={'lookingForAJobDescription'}\r\n                       placeholder={'lookingForAJobDescription'} inputType={'textArea'}\r\n                       component={InputForm}/> {/*Editing field forlookingForAJobDescription*/}\r\n\r\n                <span><Divider orientation={'left'}>Contacts: </Divider></span>\r\n                {Object.keys(profile.contacts).map((key) => {\r\n                    return <Field key={key} name={'contacts.' + key}\r\n                                  placeholder={key} component={InputForm} inputType={'input'}/>\r\n                })}\r\n\r\n                <Field name={'aboutMe'} placeholder={'aboutMe'}\r\n                       component={InputForm} inputType={'textArea'}/> {/* TextArea for editing field AboutMe*/}\r\n\r\n                <Button type=\"primary\" htmlType={'submit'}>SAVE CHANGES</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\nexport const ProfileDataEditForm = reduxForm({form: 'profileData'})(ProfileDataEdit);","import React, {useState} from \"react\";\r\nimport s from './Profileinfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\nimport {ProfileData, ProfileDataEditForm} from \"./ProfileData/ProfileData\";\r\nimport {Avatar, Col, Row, Typography} from 'antd';\r\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\r\n\r\n\r\nconst ProfileInfo = ({profile, changePhoto, status, updateStatus, myId, saveProfile}) => {\r\n    const photoLarge = profile.photos.large;\r\n    const {Title} = Typography;\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return (<Preloader/>);\r\n    }\r\n    const onPhotoChange = (e) => {\r\n        if (e.target.files.length) {\r\n            changePhoto(e.target.files[0])\r\n        }\r\n    }\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n    };\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData);\r\n        deactivateEditMode();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row style={{marginLeft: '0px'}} gutter={24}>\r\n                <Col span={14} className={s.avaNameStatus}>\r\n                    <Row gutter={16}>\r\n                        <Col span={11}>\r\n                            <div>\r\n                                <Avatar className={s.profileImg} shape={\"square\"}\r\n                                        size={300} src={photoLarge} icon={<UserOutlined />} />\r\n                            </div>\r\n                        </Col>\r\n                        <Col span={13} className={s.statusAndName}>\r\n                            <Title level={3}>{profile.fullName}</Title>\r\n                            <ProfileStatusHooks currentId={profile.userId} myId={myId} status={status}\r\n                                                updateStatus={updateStatus}/>\r\n                            {profile.userId === myId ? <input type={'file'} onChange={(e) => onPhotoChange(e)}/> : null}\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col span={10}>\r\n                    {editMode\r\n                        ? <ProfileDataEditForm profile={profile}\r\n                                               initialValues={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData currentId={profile.userId} myId={myId} activateEditMode={activateEditMode}\r\n                                       profile={profile}/>}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileInfo;\r\n\r\n","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'my-app/profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'my-app/profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'my-app/profile/SET_STATUS';\r\nconst SET_PHOTO = 'my-app/profile/SET_PHOTO';\r\n\r\nlet initialState = { //profilePage\r\n    postData:\r\n        [\r\n            {id: 1, message: 'My first post', likeCount: '15'},\r\n            {id: 2, message: 'I need to add comment section', likeCount: '20'}\r\n        ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postData: [{\r\n                    id: 3,\r\n                    message: action.postMessage,\r\n                    likeCount: 0\r\n                },\r\n                    ...state.postData]\r\n            }\r\n\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case SET_PHOTO: {\r\n            return {...state, profile: {...state.profile, photos: action.photo}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPost = (postMessage) => ({\r\n    type: ADD_POST,\r\n    postMessage\r\n})\r\n\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n})\r\n\r\nexport const getUsersProfile = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getUsersProfile(userId);\r\n    dispatch(setUserProfile(data));\r\n\r\n}\r\n\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n})\r\nexport const setPhoto = (photo) => ({\r\n    type: SET_PHOTO,\r\n    photo\r\n})\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getStatusAPI(userId);\r\n    dispatch(setStatus(data));\r\n\r\n}\r\n\r\nexport const changePhoto = (file) => async (dispatch) => {\r\n    let data = await profileAPI.changePhoto(file);\r\n    dispatch(setPhoto(data.data.photos));\r\n\r\n}\r\n\r\n\r\nexport const updateStatus = (status) => async (dispatch, getState) => {\r\n\r\n    let userId = getState().authData.id;\r\n    let response = await profileAPI.updateStatusAPI(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getStatus(userId));\r\n    } else {\r\n        console.error('Server error(updateStatusAPI)');\r\n    }\r\n\r\n}\r\n\r\nexport const saveProfile = (profileData) => async (dispatch, getState) => {\r\n    let userId = getState().authData.id\r\n    let response = await profileAPI.putProfile(profileData);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUsersProfile(userId));\r\n    } else {\r\n        console.error('Server error(putProfile)');\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","import React, {useState} from \"react\";\r\n/*import s from './Post.module.css';*/\r\nimport {Avatar, Col, Comment, Row, Tooltip} from \"antd\";\r\nimport {LikeOutlined, LikeFilled} from '@ant-design/icons';\r\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\r\n\r\nconst Post = (props) => {\r\n    const [likes, setLikes] = useState(props.likeCounter);\r\n    const [action, setAction] = useState(null);\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const like = () => {\r\n        if (isLiked) {\r\n            setLikes(+likes - 1);\r\n            setIsLiked(false);\r\n            setAction('');\r\n        } else {\r\n            setLikes(+likes + 1);\r\n            setIsLiked(true);\r\n            setAction('liked');\r\n        }\r\n    };\r\n\r\n    const item = {\r\n        boxShadow: ' 0.4em 0.4em 5px rgba(122,122,122,0.5)',\r\n        borderRadius: '5px',\r\n        padding: '5px',\r\n        paddingLeft: '15px',\r\n        backgroundColor: 'white',\r\n    }\r\n\r\n\r\n    const actions = [\r\n        <span key=\"comment-basic-like\">\r\n      <Tooltip title=\"Like\">\r\n        {React.createElement(action === 'liked' ? LikeFilled : LikeOutlined, {\r\n            onClick: like,\r\n        })}\r\n      </Tooltip>\r\n      <span className=\"comment-action\">{likes}</span>\r\n    </span>\r\n    ]\r\n\r\n    return (\r\n        <Row gutter={[0,12]}>\r\n            <Col span={24} >\r\n                <Comment style={item}\r\n                         actions={actions}\r\n                         content={props.message}\r\n                         author={props.fullName}\r\n                         avatar={<Avatar\r\n                             size={'large'}\r\n                             src={props.photo}\r\n                             icon={<UserOutlined />}/>}>\r\n\r\n                </Comment>\r\n            </Col>\r\n\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\n\r\n/*\r\n<div className={s.item}>\r\n    <img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRg0-v4ALmUjHaTQIYXO3lhI1FQ9TIkpt8WW-9GY05Cc5XxbWCx&usqp=CAU\"/>\r\n    {props.message}\r\n    <div>\r\n        <span>LIKE! {props.likeCounter}</span>\r\n    </div>\r\n</div>*/\r\n","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {InputForm} from \"../../common/FormsControls/FormsContorls\";\r\nimport {Button, Col, Row} from \"antd\";\r\nimport {maxLength} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength200 = maxLength(200);\r\n\r\nconst MyPostsForm = (props) => {\r\n    const textAreaStyle = {\r\n        resize: 'none'\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Row>\r\n                <Col span={24} className={s.myPostField}>\r\n                    <Field component={InputForm} validate={[maxLength200]} inputType={'textArea'}\r\n                           name={'postMessage'} inputStyle={textAreaStyle}\r\n                           rows={4}\r\n                           placeholder={'Start writing your post...'}/>\r\n                    <div>\r\n                        <Button htmlType={'submit'} type=\"primary\">Add post</Button>\r\n                    </div>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </form>);\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm({form: \"myPosts\"})(MyPostsForm);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    const userId = props.profilePage.profile.userId;\r\n    const postData = props.profilePage.postData;\r\n    const postElements = postData.map(p => (<Post\r\n        key={p.id}\r\n        message={p.message}\r\n        likeCounter={p.likeCount}\r\n        fullName={props.profilePage.profile.fullName}\r\n        photo={props.profilePage.profile.photos.small}\r\n    />));\r\n\r\n    const addPostHandler = (value) => {\r\n        props.addPost(value.postMessage);\r\n    }\r\n    return (\r\n        <div>\r\n            {userId === props.Id ? <MyPostsFormRedux onSubmit={addPostHandler}/> : <div style={{height: '20px'}}></div>}\r\n            <Row className={s.posts}>\r\n                <Col span={24}>\r\n                    {postElements}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n        Id: state.authData.id\r\n    }\r\n};\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\n/*import s from './Profile.module.css';*/\r\nimport ProfileInfo from \"./ProfileInfo/Profileinfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div /*className={s.content}*/>\r\n            <ProfileInfo  saveProfile = {props.saveProfile} myId={props.myId} profile={props.profile}\r\n                          status={props.status} updateStatus={props.updateStatus} changePhoto={props.changePhoto}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, {useEffect, useState} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getStatus,\r\n    getUsersProfile,\r\n    setUserProfile,\r\n    updateStatus,\r\n    changePhoto,\r\n    saveProfile\r\n} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nconst ProfileContainer = (props) => { /*My Id 7628*/\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const idFormUrl = props.match.params.userId;\r\n    const userId = idFormUrl || props.myId;\r\n    useEffect(() => {\r\n        if (userId) {\r\n            setIsLoading(true);\r\n            Promise.all([\r\n                props.getUsersProfile(userId),// Receiving profile data (img, name etc.) for user by his id (API)\r\n                props.getStatus(userId)  // Receiving status for user by his id (API)\r\n            ]).then(() => {\r\n                setIsLoading(false);\r\n            })\r\n\r\n        } else {\r\n            props.history.push(\"/login\"); // If you are not authorized on site this will redirect you to /login page\r\n        }\r\n    }, [userId])\r\n\r\n    return isLoading ? <Preloader/> : <Profile {...props}/>\r\n\r\n}\r\n\r\n//----------------------------------------------------\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    myId: state.authData.id\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            setUserProfile, getUsersProfile,\r\n            getStatus, updateStatus,\r\n            changePhoto, saveProfile\r\n        }),\r\n    withRouter/*,\r\n    withAuthRedirect*/\r\n)(ProfileContainer)\r\n\r\n\r\n/*\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() { /!*My Id 7628*!/\r\n        console.log(this.props.myId);\r\n        const idFormUrl = this.props.match.params.userId;\r\n        this.userId = idFormUrl ? idFormUrl : this.props.myId; // Id from URL\r\n        if (this.userId) {\r\n            this.props.getUsersProfile(this.userId); // Receiving profile data (img, name etc.) for user by his id (API)\r\n            this.props.getStatus(this.userId); // Receiving status for user by his id (API)\r\n        } else {\r\n            this.props.history.push(\"/login\"); // If you not authorized on site this will redirect to /login page\r\n        }\r\n    }\r\n\r\n    render() {\r\n    console.log('render Profile')\r\n        return (\r\n            <Profile {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    myId: state.authData.id\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            setUserProfile, getUsersProfile,\r\n            getStatus, updateStatus\r\n        }),\r\n    withRouter/!*,\r\n    withAuthRedirect*!/\r\n)(ProfileContainer)\r\n*/\r\n","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from \"../../assets/img/logo.bmp\"\r\nimport {Layout, Menu} from \"antd\";\r\n\r\nconst {Header} = Layout;\r\n\r\nconst HeaderComponent = (props) => {\r\n    const loginLogout = () => {\r\n        if (props.login) {\r\n            return (\r\n                <Menu style={{float: 'right'}} theme={\"dark\"} mode=\"horizontal\">\r\n                    <Menu.Item key={'1'} onClick={props.logout}>\r\n                        LOGOUT\r\n                    </Menu.Item>\r\n                    <Menu.Item key={'2'} disabled={true}>{props.login}</Menu.Item>\r\n                </Menu>\r\n\r\n            )\r\n        }\r\n        return (\r\n            <Menu style={{float: 'right'}} theme={\"dark\"} mode=\"horizontal\">\r\n                <Menu.Item key={'1'}>\r\n                    <NavLink to='/login'>LOGIN</NavLink>\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Header className={'header'}>\r\n            <NavLink to={'/profile'}>\r\n                <img className={s.siteLogo} alt={'Loading...'} src={logo}/>\r\n            </NavLink>\r\n\r\n            {loginLogout()}\r\n        </Header>\r\n\r\n    );\r\n}\r\n\r\nexport default HeaderComponent;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'my-app/auth/SET_USER_DATA';\r\nconst SET_CAPTCHA_URL = 'my-app/auth/SET_CAPTCHA_URL';\r\n\r\nlet initialState = { //authData\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaURL: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case SET_CAPTCHA_URL: {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    data: {id, email, login, isAuth}\r\n})\r\n\r\nexport const setCaptchaURL = (captchaURL) => ({\r\n    type: SET_CAPTCHA_URL,\r\n    data: {captchaURL}\r\n})\r\n\r\nexport const getAuth = () => async (dispatch) => {\r\n    let data = await authAPI.getAuthAPI();\r\n    if (data.resultCode === 0) {\r\n        const {id, email, login} = data.data;\r\n        dispatch(setUserData(id, email, login, true));\r\n    } else {\r\n        dispatch(setUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe = false, captcha = null) => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuth());\r\n    } else {\r\n        if (data.resultCode === 10) {\r\n            dispatch(getCaptchaURL());\r\n        }\r\n        dispatch(stopSubmit('login', {_error: data.messages[0]})); // Sending error message in Login and display error message\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let data = await authAPI.logout();\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuth());\r\n    } else {\r\n        console.error('Cannot get response from API for LOGOUT');\r\n    }\r\n}\r\n\r\nexport const getCaptchaURL = () => async (dispatch) => {\r\n    let data = await securityAPI.getCaptchaURL();\r\n    dispatch(setCaptchaURL(data.url))\r\n}\r\n\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuth, logout, setUserData} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    login: state.authData.login,\r\n    isAuth: state.authData.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {setUserData, getAuth, logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport {maxLength, required} from \"../../utils/validators/validators\";\r\nimport {CheckboxForm, InputForm} from \"../common/FormsControls/FormsContorls\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router\";\r\nimport style from \"../common/FormsControls/FormsContorls.module.css\";\r\nimport {Alert, Button, Divider, Form} from \"antd\";\r\n\r\n\r\nconst maxLength40 = maxLength(40);\r\n\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const wrapperCol = {  // Set size for form by using antd grid system\r\n        span: 8,\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'email'} wrapperCol={wrapperCol} validate={[required, maxLength40]} placeholder={'Login'}\r\n                       inputType={'input'}\r\n                       component={InputForm}\r\n                inputStyle={{marginBottom:'1%'}}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'password'} type={'password'} validate={[required, maxLength40]} wrapperCol={wrapperCol}\r\n                       placeholder={'Password'}\r\n                       inputType={'input'}\r\n                       component={InputForm}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'rememberMe'} type={'checkbox'} component={CheckboxForm} checkboxDescription={'Remember me'}/>\r\n            </div>\r\n            {props.captchaURL && <img alt={'Loading...'} src={props.captchaURL}/>}\r\n            {props.captchaURL &&\r\n            <Field name={'captcha'}  validate={[required]} placeholder={'Enter captcha'}\r\n                   inputType={'input'}\r\n                   component={InputForm}/>}\r\n            {props.error && <Alert\r\n                message=\"Failed\"\r\n                description={props.error}\r\n                type=\"error\"\r\n                closable\r\n                className={style.serverError}\r\n            />}\r\n            <div>\r\n                <Form.Item>\r\n                    <Button type={'primary'} htmlType={'submit'}>Login\r\n                    </Button>\r\n                </Form.Item>\r\n            </div>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth === true) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Divider orientation={'left'}>Login</Divider>\r\n            <LoginReduxForm captchaURL={props.captchaURL} onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authData.isAuth,\r\n        captchaURL: state.authData.captchaURL\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuth} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'my-app/app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = { //appData\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            let stateCopy =  {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS\r\n})\r\n\r\nexport const initializingProcess = () => {\r\n    return async (dispatch) => {\r\n     await dispatch(getAuth());\r\n     dispatch(initializedSuccess());\r\n    }\r\n}\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport {BrowserRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport News from \"./Components/News/News\";\r\nimport Music from \"./Components/Music/Music\";\r\nimport Settings from \"./Components/Settings/Settings\";\r\nimport UsersContainer from \"./Components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport {initializingProcess} from \"./redux/app-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from \"./Components/common/Preloader/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport {Layout} from \"antd\";\r\n\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./Components/Dialogs/DialogsContainer\"));\r\nconst {Content,Sider} = Layout;\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializingProcess();\r\n    }\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n        return (\r\n            <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n                <Layout style={{minHeight: '100vh', margin: 'auto', backgroundColor:'white'}}>\r\n                    <HeaderContainer/>\r\n                    <Layout style={{width: '80%', margin: 'auto'}}>\r\n                        <Sider width={200}/>\r\n                        <Navbar/>\r\n                        <Content style={{margin: '1%', padding:'1%'}}>\r\n                            <Switch>\r\n                                <Route render={() =>\r\n                                    <ProfileContainer/>} path='/profile/:userId?'/>\r\n                                <Route render={withSuspense(DialogsContainer)} path='/dialogs'/>\r\n                                <Route render={News} path='/news'/>\r\n                                <Route render={Music} path='/music'/>\r\n                                <Route render={Settings} path='/settings'/>\r\n                                <Route render={() =>\r\n                                    <UsersContainer/>} path='/users'/>\r\n                                <Route render={() =>\r\n                                    <Login/>} path='/login'/>\r\n                                <Redirect exact from=\"/\" to=\"/profile\"/>\r\n                                <Route path='*'\r\n                                       render={() => <div>404 NOT FOUND</div>}/>\r\n                            </Switch>\r\n                        </Content>\r\n                    </Layout>\r\n                </Layout>\r\n            </BrowserRouter>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (state) => ({\r\n    initialized: state.appData.initialized\r\n})\r\n\r\nexport default compose(\r\n    connect(mapDispatchToProps, {initializingProcess})\r\n)(App);","import React from \"react\";\r\nimport Preloader from \"../Components/common/Preloader/Preloader\";\r\n\r\n\r\n/*export const withSuspense = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            return <React.Suspense fallback={<Preloader/>}>\r\n                <Component {...this.props}/>\r\n            </React.Suspense>\r\n        }\r\n    }\r\n    return RedirectComponent;\r\n}*/\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}\r\n\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport userReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    dialogs: dialogsReducer ,\r\n    profilePage: profileReducer,\r\n    usersPage: userReducer,\r\n    authData: authReducer,\r\n    form: formReducer,\r\n    appData: appReducer\r\n})\r\n\r\n/*let store = createStore(reducers, applyMiddleware(thunkMiddleware));*/\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n//window.store = store;\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./App\";\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImg\":\"Profileinfo_profileImg__3AICu\",\"userName\":\"Profileinfo_userName__2Wlz5\",\"statusAndName\":\"Profileinfo_statusAndName__3GG_n\",\"profileInfo\":\"Profileinfo_profileInfo__fgTxQ\",\"avaNameStatus\":\"Profileinfo_avaNameStatus__1wwhN\"};"],"sourceRoot":""}