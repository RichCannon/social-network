{"version":3,"sources":["Components/Users/User/User.module.css","Components/common/Pagination/Pagination.module.css","Components/Profile/MyPosts/MyPosts.module.css","redux/dialogs-reducer.js","Components/Users/Users.module.css","Components/common/Preloader/Preloader.module.css","Components/common/FormsControls/FormsContorls.js","Components/Header/Header.module.css","assets/img/logo.bmp","Components/common/FormsControls/FormsContorls.module.css","Components/Navbar/Navbar.jsx","Components/News/News.jsx","Components/Music/Music.jsx","Components/Settings/Settings.jsx","Components/common/Pagination/Pagination.jsx","Components/Users/User/User.jsx","Components/Users/Users.jsx","api/api.js","redux/users-reducer.js","Components/common/Preloader/Preloader.jsx","Components/Users/UsersContainer.jsx","utils/validators/validators.js","Components/common/NoData/NoData.jsx","Components/Profile/ProfileInfo/ProfileStatusHooks.jsx","Components/Profile/ProfileInfo/ProfileData/ProfileData.jsx","Components/Profile/ProfileInfo/Profileinfo.jsx","redux/profile-reducer.js","Components/Profile/MyPosts/Post/Post.jsx","Components/Profile/MyPosts/MyPosts.jsx","Components/Profile/MyPosts/MyPostsContainer.jsx","Components/Profile/Profile.jsx","Components/Profile/ProfileContainer.jsx","Components/Header/Header.jsx","redux/auth-reducer.js","Components/Header/HeaderContainer.jsx","Components/Login/Login.jsx","redux/app-reducer.js","App.js","hoc/withSuspense.js","redux/redux-store.js","index.js","Components/Profile/ProfileInfo/Profileinfo.module.css"],"names":["module","exports","SEND_MESSAGE","initialState","messageData","id","name","imgURL","message","sendMessage","currentMessage","type","dialogsReducer","state","action","map","m","InputForm","input","touched","meta","wrapperCol","inputType","inputStyle","props","isTouched","hasError","error","Item","hasFeedback","validateStatus","help","style","marginBottom","rows","Password","Input","TextArea","formType","CheckboxForm","checkboxDescription","Navbar","Sider","height","position","width","className","mode","theme","key","to","News","Music","Settings","Arrows","direction","s","arrow","Pagination","pageSize","totalCount","currentPage","onPageChanged","buttonsArray","totalPagesAmount","Math","ceil","end","i","push","onClick","User","handlerToggleFollow","followedUsersId","user","isAuth","Title","Typography","gutter","span","userCont","avaAndFollow","size","src","photos","small","icon","placement","title","followed","danger","disabled","some","nameAndStatus","level","status","location","Users","usersArray","users","allPages","instance","axios","baseURL","withCredentials","headers","usersAPI","get","then","response","data","userId","post","delete","profileAPI","put","file","formData","FormData","append","profile","authAPI","email","password","rememberMe","captcha","securityAPI","TOGGLE_FOLLOW","SET_USERS","isFetching","toggleFollow","setCurrentPage","setUsers","setTotalUsersCount","toggleIsFetching","followingInProgress","isFollowing","userReducer","u","filter","Preloader","ldsRipple","UsersContainer","pageNumber","getUsers","followStatus","unfollow","follow","this","React","Component","compose","connect","usersPage","authData","dispatch","a","items","resultCode","console","required","value","undefined","maxLength","length","NoData","color","maxlength20","StatusFieldForm","reduxForm","form","editMode","handleSubmit","activateEditMode","onBlur","Field","component","validate","autoFocus","onDoubleClick","ProfileStatusHooks","useState","setEditMode","initialValues","onSubmit","updateStatus","myId","currentId","ProfileData","isLookingForAJob","lookingForAJob","profileInfo","lookingForAJobDescription","orientation","Object","keys","contacts","offset","aboutMe","ProfileDataEdit","memo","placeholder","htmlType","ProfileDataEditForm","ProfileInfo","changePhoto","saveProfile","photoLarge","large","marginLeft","avaNameStatus","profileImg","shape","statusAndName","fullName","onChange","e","target","files","onPhotoChange","ADD_POST","SET_STATUS","SET_PHOTO","postData","likeCount","setUserProfile","getUsersProfile","getStatus","profileReducer","postMessage","photo","Post","likeCounter","likes","setLikes","setAction","isLiked","setIsLiked","actions","createElement","LikeFilled","LikeOutlined","boxShadow","borderRadius","padding","paddingLeft","backgroundColor","content","author","avatar","maxLength200","MyPostsFormRedux","myPostField","resize","MyPosts","profilePage","postElements","p","Id","addPost","posts","MyPostsContainer","Profile","getState","profileData","withRouter","isLoading","setIsLoading","match","params","useEffect","Promise","all","history","Header","Layout","HeaderComponent","siteLogo","alt","logo","login","float","logout","captchaURL","setUserData","getAuth","getCaptchaURL","url","authReducer","HeaderContainer","maxLength40","LoginReduxForm","description","closable","serverError","stopSubmit","_error","messages","initialized","appReducer","stateCopy","DialogsContainer","lazy","Content","App","initializingProcess","minHeight","margin","render","path","Suspense","fallback","exact","from","appData","reducers","combineReducers","dialogs","formReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9745096b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nameAndStatus\":\"User_nameAndStatus__3guBE\",\"avaAndFollow\":\"User_avaAndFollow__DqU7b\",\"userCont\":\"User_userCont__3hm4v\",\"location\":\"User_location__2kUVl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"arrow\":\"Pagination_arrow__3jRSn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3rYAx\",\"myPostField\":\"MyPosts_myPostField__3rvZE\"};","const SEND_MESSAGE = 'my-app/dialogs/SEND-MESSAGE';\r\n\r\nlet initialState = { //dialogs\r\n    messageData: [\r\n        {\r\n            id: 1,\r\n            name: 'Jack Stauber',\r\n            imgURL: 'https://7lafa.com/musicians/jack_stauber.jpg',\r\n            message: ['Hello']\r\n        },\r\n        {\r\n            id: 2,\r\n            name: 'Mac DeMarco',\r\n            imgURL: 'https://media.gq.com/photos/5ca78f84e03e8148480e5219/master/w_1600%2Cc_limit/mac-demarco-gq-may-2019-02.jpg',\r\n            message: [`How ya doin'`]\r\n        }\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE: {\r\n            return  {\r\n                ...state,\r\n                messageData: state.messageData.map(m => {\r\n                    if (m.id === action.id) {\r\n                        return {...m, message: [...m.message, action.currentMessage]};\r\n                    } else {\r\n                        return {...m, message: [...m.message]};\r\n                    }\r\n                })\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessage = (id, currentMessage) => ({\r\n    type: SEND_MESSAGE,\r\n    id,\r\n    currentMessage\r\n})\r\n\r\n\r\nexport default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allPages\":\"Users_allPages__2R9cv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ldsRipple\":\"Preloader_ldsRipple__2C_Jp\"};","import React from \"react\";\r\n/*import styles from \"./FormsContorls.module.css\"*/\r\nimport {Checkbox, Form, Input} from \"antd\";\r\n\r\n\r\n/*export const Input = ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError && styles.error)}>\r\n            <input  {...input}   {...props} />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n}*/\r\n\r\nconst formType = ({rows, ...props}, input, inputType, inputStyle) => {\r\n\r\n    const {Password, TextArea} = Input;\r\n    if (inputType === 'input') {\r\n        if (props.type === 'password') {\r\n            return <Password style={inputStyle} {...props} {...input} />\r\n        }\r\n        return <Input style={inputStyle} {...props} {...input}/>\r\n    } else if (inputType === 'textArea') {\r\n        return <TextArea style={inputStyle} rows={rows} {...props} {...input}/>\r\n    }\r\n}\r\n\r\n\r\nexport const InputForm = ({input, touched, meta, wrapperCol, inputType, inputStyle, ...props}) => {\r\n    const isTouched = touched ? true : meta.touched;\r\n    const hasError = meta.error && isTouched;\r\n\r\n    return (\r\n        <Form.Item wrapperCol={wrapperCol}\r\n                   hasFeedback\r\n                   validateStatus={hasError ? 'error' : \"\"}\r\n                   help={hasError && meta.error}\r\n                    style={{marginBottom:'0'}}>\r\n            {formType(props, input, inputType, inputStyle)}\r\n        </Form.Item>\r\n    );\r\n}\r\n\r\n\r\n/*export const TextArea = ({input, meta, ...props}) => {\r\n    const hasError = meta.error && meta.touched;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError && styles.error)}>\r\n            <textarea  {...input} {...props} />\r\n            {hasError && <span>{meta.error}</span>}\r\n        </div>\r\n    );\r\n}*/\r\n\r\nexport const CheckboxForm = ({input, ...props}) => {\r\n    return (\r\n        <Form.Item>\r\n            <Checkbox>{props.checkboxDescription}</Checkbox>\r\n        </Form.Item>\r\n    );\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2VqTr\",\"logBut\":\"Header_logBut__2c-G1\",\"siteLogo\":\"Header_siteLogo__372Rg\"};","module.exports = __webpack_public_path__ + \"static/media/logo.c78f9214.bmp\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"serverError\":\"FormsContorls_serverError__QysQg\"};","import React from \"react\";\r\n/*import n from './Navbar.module.css';*/\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Menu} from \"antd\";\r\nimport Sider from \"antd/es/layout/Sider\";\r\n\r\n\r\nconst Navbar = () => {\r\n\r\n\r\n    return (\r\n            <Sider style={{height: '100vh',\r\n                position: 'fixed',}} width={200} className=\"site-layout-background\" mode={'inline'}>\r\n                <Menu theme={'dark'} mode={'inline'}>\r\n                    <Menu.Item key='1'>\r\n                        <NavLink to='/profile'>Profile</NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='2'>\r\n                        <NavLink to='/dialogs'>Messages</NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='3'>\r\n                        <NavLink to='/news'>News</NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='4'>\r\n                        <NavLink to='/music'>Music</NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='5'>\r\n                        <NavLink to='/settings'>Settings</NavLink>\r\n                    </Menu.Item>\r\n                    <Menu.Item key='6'>\r\n                        <NavLink to='/users'>Users</NavLink>\r\n                    </Menu.Item>\r\n                </Menu>\r\n            </Sider>\r\n\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>News</div>\r\n    );\r\n}\r\n\r\nexport default News;","import React from \"react\";\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>Music</div>\r\n    );\r\n}\r\n\r\nexport default Music;","import React from \"react\";\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>Settings</div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import React from \"react\";\r\nimport s from \"./Pagination.module.css\";\r\nimport {Button} from 'antd';\r\nimport ArrowLeftOutlined from \"@ant-design/icons/lib/icons/ArrowLeftOutlined\";\r\nimport ArrowRightOutlined from \"@ant-design/icons/lib/icons/ArrowRightOutlined\";\r\n\r\nconst Pagination = ({pageSize, totalCount, currentPage, onPageChanged}) => {\r\n\r\n\r\n    const pagePortion = 3; // + 2\r\n    let buttonsArray = [];\r\n    const totalPagesAmount = Math.ceil(totalCount / pageSize);\r\n    let end = ((currentPage + pagePortion) >= totalPagesAmount) ? totalPagesAmount : currentPage + pagePortion;\r\n    const start = currentPage === 1 ? end++ && 1\r\n        : (currentPage - 1 >= totalPagesAmount - pagePortion ? totalPagesAmount - pagePortion - 1 : currentPage - 1);\r\n    for (let i = start; i <= end; i++) {\r\n\r\n        buttonsArray.push(<Button key={i} type={i === currentPage ? 'primary' : ''}\r\n                                  onClick={() => onPageChanged(i)}>{i}</Button>)\r\n    }\r\n\r\n    return [\r\n        <Button key={'start'} onClick={() => onPageChanged(1)}>{1}</Button>,\r\n        <Arrows direction={'left'}/>,\r\n        ...buttonsArray,\r\n        <Arrows direction={'right'}/>,\r\n        <Button key={'end'} onClick={() => onPageChanged(totalPagesAmount)}>{totalPagesAmount}</Button>,\r\n    ];\r\n\r\n\r\n}\r\n\r\nconst Arrows = ({direction}) => {\r\n    if (direction === 'right') {\r\n        return <ArrowRightOutlined key={'arrowRight'} className={s.arrow}/>\r\n    } else if (direction === 'left') {\r\n        return <ArrowLeftOutlined key={'arrowLeft'} className={s.arrow}/>\r\n    }\r\n}\r\n\r\n\r\nexport default Pagination;","import React from \"react\";\r\nimport s from './User.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Avatar, Button, Col, Row, Tooltip, Typography} from \"antd\";\r\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\r\n\r\n\r\nconst User = ({handlerToggleFollow, followedUsersId, user, isAuth}) => {\r\n    const {Title} = Typography;\r\n\r\n    return (\r\n        <Row gutter={[0, 24]}>\r\n            <Col span={24}>\r\n                <div className={s.userCont}>\r\n                    <div className={s.avaAndFollow}>\r\n                        <div>\r\n                            <NavLink to={`/profile/${user.id}`}>\r\n                                <Avatar size={70} src={user.photos.small} icon={<UserOutlined/>}/>\r\n                            </NavLink>\r\n                        </div>\r\n                        <div>\r\n                            <Tooltip placement=\"bottom\" title={!isAuth && 'You need to be authorized'}>\r\n                                <Button\r\n                                    type={user.followed ? '' : 'primary'}\r\n                                    danger={user.followed}\r\n                                    disabled={!isAuth || followedUsersId.some(id => id === user.id)}\r\n                                    onClick={() => handlerToggleFollow(user.id, user.followed)}>\r\n                                    {user.followed ? \"UNFOLLOW\" : \"FOLLOW\"}\r\n                                </Button>\r\n                            </Tooltip>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.nameAndStatus}>\r\n                        <Title level={4}>{user.name}</Title>\r\n                        <div>{user.status}</div>\r\n                    </div>\r\n                    <div className={s.location}>\r\n                        <div>{'user.location.city'}</div>\r\n                        <div>{'user.location.country'}</div>\r\n                    </div>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default User;","import React from \"react\";\r\nimport s from './Users.module.css';\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\nimport User from \"./User/User\";\r\nimport {Col, Row} from \"antd\";\r\n\r\n\r\nconst Users = (props) => {\r\n\r\n    const usersArray = props.users.map((user) => {\r\n        return <User key={user.id}\r\n                     isAuth={props.isAuth}\r\n                     handlerToggleFollow={props.handlerToggleFollow}\r\n                     user={user}\r\n                     followedUsersId={props.followedUsersId}/>\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <Row >\r\n                <Col span={24}>\r\n                    {usersArray}\r\n                </Col>\r\n            </Row>\r\n            <div  className={s.allPages}>\r\n                <Pagination\r\n                    pageSize={props.pageSize}\r\n                    totalCount={props.totalCount}\r\n                    currentPage={props.currentPage}\r\n                    onPageChanged={props.onPageChanged}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Users;","import * as axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': 'dbf5504c-f2e0-4dbe-bf14-76c4460daab1'\r\n    }\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n\r\n    getUsersAPI(pageSize, currentPage) {\r\n        return instance.get(`users?count=${pageSize}&page=${currentPage}`)\r\n            .then(response => response.data)\r\n    },\r\n    postFollow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    deleteFollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getUsersProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    getStatusAPI(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n            .then(response => response.data)\r\n    },\r\n    updateStatusAPI(status) {\r\n        return instance.put('profile/status', {status: status});\r\n    },\r\n    changePhoto(file) {\r\n        const formData = new FormData();\r\n        formData.append('image', file);\r\n        return instance.put('profile/photo', formData, {\r\n            \"Content-Type\": \"multipart/form-data\"\r\n        }).then(response => response.data)\r\n    },\r\n    putProfile(profile) {\r\n        return instance.put('profile',profile)\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    getAuthAPI() {\r\n        return instance.get(`auth/me`)\r\n            .then(response => response.data)\r\n    },\r\n    login(email, password, rememberMe, captcha) {\r\n        return instance.post('auth/login', {email, password, rememberMe, captcha})\r\n            .then(response => response.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/login')\r\n            .then(response => response.data)\r\n    }\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaURL() {\r\n        return instance.get('security/get-captcha-url')\r\n            .then(response => response.data)\r\n    }\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\n\r\nconst TOGGLE_FOLLOW = 'my-app/users/TOGGLE_FOLLOW';\r\nconst SET_USERS = 'my-app/users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'my-app/users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'my-app/users/SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'my-app/users/TOGGLE_IS_FETCHING';\r\nconst FOLLOWING_IN_PROGRESS = 'my-app/users/FOLLOWING_IN_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalCount: 0, // Amount of all registred users\r\n    pageSize: 5, // Amount of users on 1 page\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followedUsersId: [] // On which users follow/unfollow in progress\r\n}\r\n\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case TOGGLE_FOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (action.userId === u.id) {\r\n                        return {...u, followed: !u.followed};\r\n                    }\r\n                    return u;\r\n                })\r\n            };\r\n        }\r\n\r\n\r\n        case SET_USERS: {\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {\r\n                ...state,\r\n                totalCount: action.totalCount\r\n            }\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n        case FOLLOWING_IN_PROGRESS: {\r\n\r\n            return {\r\n                ...state,\r\n                followedUsersId: action.isFollowing\r\n                    ? [...state.followedUsersId, action.userId]\r\n                    : [...state.followedUsersId.filter(id => action.userId !== id)]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const toggleFollow = (userId) => ({\r\n    type: TOGGLE_FOLLOW,\r\n    userId\r\n})\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE,\r\n    currentPage\r\n})\r\n\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS,\r\n    users\r\n})\r\n\r\nexport const setTotalUsersCount = (totalCount) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalCount\r\n})\r\n\r\nexport const toggleIsFetching = (isFetching) => ({ // Indicator for Preloader\r\n    type: TOGGLE_IS_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const followingInProgress = (isFollowing, userId) => ({ // For disabling FOLLOW button\r\n    type: FOLLOWING_IN_PROGRESS,\r\n    isFollowing,\r\n    userId\r\n})\r\n\r\nexport const getUsers = (pageSize, currentPage = 1) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true)); // Enable <Preloader/>\r\n\r\n    let data = await usersAPI.getUsersAPI(pageSize, currentPage);\r\n    dispatch(toggleIsFetching(false)); // Disable <Preloader/>\r\n    dispatch(setUsers(data.items)); // Add users array in state\r\n    dispatch(setTotalUsersCount(data.totalCount)); // Change amount of all registred users\r\n    dispatch(setCurrentPage(currentPage)); // Change number of current page\r\n}\r\n\r\n\r\nexport const unfollow = (userId) => async (dispatch) => {\r\n    let data = await usersAPI.deleteFollow(userId);\r\n\r\n    if (data.resultCode !== 0) {\r\n        console.error('Server error(deleteFollow)');\r\n        return;\r\n    }\r\n    dispatch(toggleFollow(userId));\r\n    dispatch(followingInProgress(false, userId));\r\n\r\n}\r\n\r\nexport const follow = (userId) => async (dispatch) => {\r\n    let data = await usersAPI.postFollow(userId);\r\n\r\n    if (data.resultCode !== 0) {\r\n        console.error('Server error(postFollow)');\r\n        return;\r\n    }\r\n    dispatch(toggleFollow(userId));\r\n    dispatch(followingInProgress(false, userId));\r\n\r\n}\r\n\r\n\r\nexport default userReducer;","import React from \"react\";\r\nimport s from \"./Preloader.module.css\"\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div className={s.ldsRipple}>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport Users from \"./Users\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    setCurrentPage,\r\n    setUsers,\r\n    setTotalUsersCount, toggleIsFetching, followingInProgress, getUsers, unfollow, follow\r\n} from \"../../redux/users-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n/*import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";*/\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.pageSize, this.props.currentPage);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsers(this.props.pageSize, pageNumber);\r\n    }\r\n\r\n   handlerToggleFollow = (userId, followStatus) => {\r\n        this.props.followingInProgress(true, userId);\r\n        if (followStatus) {\r\n            this.props.unfollow(userId);\r\n        } else {\r\n            this.props.follow(userId);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            {this.props.isFetching ? <Preloader/> :\r\n                <Users\r\n                    handlerToggleFollow={this.handlerToggleFollow}\r\n                    users={this.props.users}\r\n                    currentPage={this.props.currentPage}\r\n                    totalCount={this.props.totalCount}\r\n                    onPageChanged={this.onPageChanged}\r\n                    pageSize={this.props.pageSize}\r\n                    followingInProgress={this.props.followingInProgress}\r\n                    followedUsersId={this.props.followedUsersId}\r\n                    follow = {this.props.follow}\r\n                    unfollow = {this.props.unfollow}\r\n                    isAuth={this.props.isAuth}\r\n                />}\r\n        </>)\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersPage.users,\r\n        pageSize: state.usersPage.pageSize,\r\n        currentPage: state.usersPage.currentPage,\r\n        totalCount: state.usersPage.totalCount,\r\n        isAuth: state.authData.isAuth,\r\n        isFetching: state.usersPage.isFetching,\r\n        followedUsersId: state.usersPage.followedUsersId\r\n    }\r\n}\r\n\r\n/*let mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        toggleFollow: (userId) => {\r\n            dispatch(toggleFollowAC(userId));\r\n        },\r\n        /!*  unfollow: (userId) => {\r\n              dispatch(unfollowAC(userId));\r\n          },*!/\r\n        setUsers: (users) => {\r\n            dispatch(setUsersAC(users));\r\n        },\r\n        setCurrentPage: (currentPage) => {\r\n            dispatch(setCurrentPageAC(currentPage));\r\n        },\r\n        setTotalUsersCount: (totalCount) => {\r\n            dispatch(setTotalUsersCountAC(totalCount));\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            dispatch(toggleIsFetchingAC(isFetching));\r\n        }\r\n\r\n    }\r\n}*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setUsers,\r\n        setCurrentPage,\r\n        setTotalUsersCount,\r\n        toggleIsFetching,\r\n        followingInProgress,\r\n        getUsers,\r\n        follow,\r\n        unfollow\r\n    })\r\n)(UsersContainer);\r\n","export const required = (value) => {\r\n    return value ? undefined : 'Field is required';\r\n}\r\n\r\nexport const maxLength = (length) => {\r\n    return (value) => {\r\n        if(!value) return undefined;\r\n        return value.length > length ? `Max length is ${length}` : undefined;\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst NoData = (props) => {\r\n    return (\r\n        <span style={{color: 'lightgray'}}>No data</span>\r\n    );\r\n}\r\n\r\nexport default NoData;","import React, {useState} from \"react\";\r\n\r\nimport {InputForm} from \"../../common/FormsControls/FormsContorls\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLength} from \"../../../utils/validators/validators\";\r\nimport NoData from \"../../common/NoData/NoData\";\r\nimport {Tooltip} from \"antd\";\r\n\r\n\r\nconst ProfileStatusHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const deactivateEditMode = (status) => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    };\r\n\r\n    const activateEditMode = () => {\r\n        if (props.myId !== props.currentId) return;\r\n        setEditMode(true);\r\n    };\r\n\r\n    const onSubmit = (form) => {\r\n        deactivateEditMode(form.status);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <StatusFieldForm initialValues={{status: props.status}} status={props.status} onSubmit={onSubmit}\r\n                             editMode={editMode} activateEditMode={activateEditMode}/>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst maxlength20 = maxLength(20);\r\n\r\n\r\nconst StatusField = ({editMode, handleSubmit, activateEditMode, status}) => {\r\n    return (<>{\r\n        editMode\r\n            ? <form onBlur={handleSubmit}>\r\n                <Field name={'status'}\r\n                       inputType={'input'}\r\n                       component={InputForm}\r\n                       validate={[maxlength20]}\r\n                       autoFocus={true}\r\n                       touched={true}\r\n                       wrapperCol={{span: 18}}\r\n                /></form>\r\n            : <span onDoubleClick={activateEditMode}>\r\n                      {status\r\n                          ? <Tooltip placement=\"bottom\" title={'Double click to change status'}> {status} </Tooltip>\r\n                          : <NoData/>}\r\n            </span>\r\n    }</>)\r\n}\r\n\r\nconst StatusFieldForm = reduxForm({form: 'status'})(StatusField);\r\n\r\nexport default ProfileStatusHooks;\r\n\r\n/*<Tooltip placement=\"bottom\" title={'Double click to change status'}> </Tooltip>         */","import React from \"react\";\r\nimport s from \"../Profileinfo.module.css\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {InputForm, CheckboxForm} from \"../../../common/FormsControls/FormsContorls\";\r\nimport {Divider, Button, Row, Col} from \"antd\";\r\nimport NoData from \"../../../common/NoData/NoData\";\r\n\r\n\r\nexport const ProfileData = ({profile, activateEditMode, currentId, myId}) => {\r\n    let isLookingForAJob;\r\n\r\n    if (profile.lookingForAJob === undefined) {\r\n        isLookingForAJob = <NoData/>\r\n    } else if (profile.lookingForAJob === false) {\r\n        isLookingForAJob = 'No';\r\n    } else if (profile.lookingForAJob === true) {\r\n        isLookingForAJob = 'Yes';\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Row className={s.profileInfo}>\r\n            <Col span={24}>\r\n                <Row>\r\n                    <Col span={10}><b>lookingForAJob: </b></Col> <Col\r\n                    span={14}>{isLookingForAJob}</Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={10}> <b>lookingForAJobDescription: </b>\r\n                    </Col>\r\n                    <Col span={14}>\r\n                        {profile.lookingForAJobDescription || <NoData/>}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={24}> <Divider orientation={'left'}>Contacts: </Divider>\r\n                    </Col>\r\n                </Row>\r\n                {Object.keys(profile.contacts).map((key) => {\r\n                    return (\r\n                        <Row key={key}>\r\n                            <Col span={4} offset={3} key={key}>\r\n                                <b>{key}: </b>\r\n                            </Col>\r\n                            <Col span={17}>\r\n                                {profile.contacts[key] || <NoData/>}\r\n                            </Col>\r\n                        </Row>\r\n                    )\r\n                })}\r\n                <Row>\r\n                    <Col span={5}> <b>aboutMe: </b></Col><Col span={10}>{profile.aboutMe || <NoData/>}\r\n                </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col span={24}>\r\n                        {currentId === myId ?\r\n                            <Button style={{width: '100%'}} onClick={activateEditMode}>EDIT PROFILE</Button> : null}\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}\r\n\r\n\r\nconst ProfileDataEdit = React.memo(({handleSubmit, profile}) => {\r\n    return (\r\n        <div className={s.profileInfo}>\r\n            <form onSubmit={handleSubmit}>\r\n\r\n                <Field name={'fullName'} placeholder={'Full Name'}\r\n                       component={InputForm} inputType={'input'}/> {/*Editing field for fullName*/}\r\n\r\n                <Field name={'lookingForAJob'} type={'checkbox'}\r\n                       checkboxDescription={'lookingForAJob'}\r\n                       component={CheckboxForm}/> {/*Checkbox for lookingForAJob*/}\r\n\r\n                <Field name={'lookingForAJobDescription'}\r\n                       placeholder={'lookingForAJobDescription'} inputType={'textArea'}\r\n                       component={InputForm}/> {/*Editing field forlookingForAJobDescription*/}\r\n\r\n                <span><Divider orientation={'left'}>Contacts: </Divider></span>\r\n                {Object.keys(profile.contacts).map((key) => {\r\n                    return <Field key={key} name={'contacts.' + key}\r\n                                  placeholder={key} component={InputForm} inputType={'input'}/>\r\n                })}\r\n\r\n                <Field name={'aboutMe'} placeholder={'aboutMe'}\r\n                       component={InputForm} inputType={'textArea'}/> {/* TextArea for editing field AboutMe*/}\r\n\r\n                <Button type=\"primary\" htmlType={'submit'}>SAVE CHANGES</Button>\r\n            </form>\r\n        </div>\r\n    );\r\n})\r\n\r\n\r\nexport const ProfileDataEditForm = reduxForm({form: 'profileData'})(ProfileDataEdit);","import React, {useState} from \"react\";\r\nimport s from './Profileinfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatusHooks from \"./ProfileStatusHooks\";\r\nimport {ProfileData, ProfileDataEditForm} from \"./ProfileData/ProfileData\";\r\nimport {Avatar, Col, Row, Typography} from 'antd';\r\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\r\n\r\n\r\nconst ProfileInfo = ({profile, changePhoto, status, updateStatus, myId, saveProfile}) => {\r\n    const photoLarge = profile.photos.large;\r\n    const {Title} = Typography;\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!profile) {\r\n        return (<Preloader/>);\r\n    }\r\n    const onPhotoChange = (e) => {\r\n        if (e.target.files.length) {\r\n            changePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    };\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n    };\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData);\r\n        deactivateEditMode();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Row style={{marginLeft: '0px'}} gutter={24}>\r\n                <Col span={14} className={s.avaNameStatus}>\r\n                    <Row gutter={16}>\r\n                        <Col span={11}>\r\n                            <div>\r\n                                <Avatar className={s.profileImg} shape={\"square\"}\r\n                                        size={300} src={photoLarge} icon={<UserOutlined />} />\r\n                            </div>\r\n                        </Col>\r\n                        <Col span={13} className={s.statusAndName}>\r\n                            <Title level={3}>{profile.fullName}</Title>\r\n                            <ProfileStatusHooks currentId={profile.userId} myId={myId} status={status}\r\n                                                updateStatus={updateStatus}/>\r\n                            {profile.userId === myId ? <input type={'file'} onChange={(e) => onPhotoChange(e)}/> : null}\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col span={10}>\r\n                    {editMode\r\n                        ? <ProfileDataEditForm profile={profile}\r\n                                               initialValues={profile} onSubmit={onSubmit}/>\r\n                        : <ProfileData currentId={profile.userId} myId={myId} activateEditMode={activateEditMode}\r\n                                       profile={profile}/>}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ProfileInfo;\r\n\r\n","import {profileAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'my-app/profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'my-app/profile/SET_USER_PROFILE';\r\nconst SET_STATUS = 'my-app/profile/SET_STATUS';\r\nconst SET_PHOTO = 'my-app/profile/SET_PHOTO';\r\n\r\nlet initialState = { //profilePage\r\n    postData:\r\n        [\r\n            {id: 1, message: 'My first post', likeCount: '15'},\r\n            {id: 2, message: 'I need to add comment section', likeCount: '20'}\r\n        ],\r\n    profile: null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            return {\r\n                ...state,\r\n                postData: [{\r\n                    id: 3,\r\n                    message: action.postMessage,\r\n                    likeCount: 0\r\n                },\r\n                    ...state.postData]\r\n            }\r\n\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile};\r\n        }\r\n        case SET_STATUS: {\r\n            return {...state, status: action.status}\r\n        }\r\n        case SET_PHOTO: {\r\n            return {...state, profile: {...state.profile, photos: action.photo}}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPost = (postMessage) => ({\r\n    type: ADD_POST,\r\n    postMessage\r\n})\r\n\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE,\r\n    profile\r\n})\r\n\r\nexport const getUsersProfile = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getUsersProfile(userId);\r\n    dispatch(setUserProfile(data));\r\n\r\n}\r\n\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS,\r\n    status\r\n})\r\nexport const setPhoto = (photo) => ({\r\n    type: SET_PHOTO,\r\n    photo\r\n})\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let data = await profileAPI.getStatusAPI(userId);\r\n    dispatch(setStatus(data));\r\n\r\n}\r\n\r\nexport const changePhoto = (file) => async (dispatch) => {\r\n    let data = await profileAPI.changePhoto(file);\r\n    dispatch(setPhoto(data.data.photos));\r\n\r\n}\r\n\r\n\r\nexport const updateStatus = (status) => async (dispatch, getState) => {\r\n\r\n    let userId = getState().authData.id;\r\n    let response = await profileAPI.updateStatusAPI(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getStatus(userId));\r\n    } else {\r\n        console.error('Server error(updateStatusAPI)');\r\n    }\r\n\r\n}\r\n\r\nexport const saveProfile = (profileData) => async (dispatch, getState) => {\r\n    let userId = getState().authData.id\r\n    let response = await profileAPI.putProfile(profileData);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUsersProfile(userId));\r\n    } else {\r\n        console.error('Server error(putProfile)');\r\n    }\r\n}\r\n\r\n\r\nexport default profileReducer;","import React, {useState} from \"react\";\r\n/*import s from './Post.module.css';*/\r\nimport {Avatar, Col, Comment, Row, Tooltip} from \"antd\";\r\nimport {LikeOutlined, LikeFilled} from '@ant-design/icons';\r\nimport UserOutlined from \"@ant-design/icons/lib/icons/UserOutlined\";\r\n\r\nconst Post = (props) => {\r\n    const [likes, setLikes] = useState(props.likeCounter);\r\n    const [action, setAction] = useState(null);\r\n    const [isLiked, setIsLiked] = useState(false);\r\n    const like = () => {\r\n        if (isLiked) {\r\n            setLikes(+likes - 1);\r\n            setIsLiked(false);\r\n            setAction('');\r\n        } else {\r\n            setLikes(+likes + 1);\r\n            setIsLiked(true);\r\n            setAction('liked');\r\n        }\r\n    };\r\n\r\n    const item = {\r\n        boxShadow: ' 0.4em 0.4em 5px rgba(122,122,122,0.5)',\r\n        borderRadius: '5px',\r\n        padding: '5px',\r\n        paddingLeft: '15px',\r\n        backgroundColor: 'white',\r\n    }\r\n\r\n\r\n    const actions = [\r\n        <span key=\"comment-basic-like\">\r\n      <Tooltip title=\"Like\">\r\n        {React.createElement(action === 'liked' ? LikeFilled : LikeOutlined, {\r\n            onClick: like,\r\n        })}\r\n      </Tooltip>\r\n      <span className=\"comment-action\">{likes}</span>\r\n    </span>\r\n    ]\r\n\r\n    return (\r\n        <Row gutter={[0,12]}>\r\n            <Col span={24} >\r\n                <Comment style={item}\r\n                         actions={actions}\r\n                         content={props.message}\r\n                         author={props.fullName}\r\n                         avatar={<Avatar\r\n                             size={'large'}\r\n                             src={props.photo}\r\n                             icon={<UserOutlined />}/>}>\r\n\r\n                </Comment>\r\n            </Col>\r\n\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default Post;\r\n\r\n\r\n/*\r\n<div className={s.item}>\r\n    <img\r\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRg0-v4ALmUjHaTQIYXO3lhI1FQ9TIkpt8WW-9GY05Cc5XxbWCx&usqp=CAU\"/>\r\n    {props.message}\r\n    <div>\r\n        <span>LIKE! {props.likeCounter}</span>\r\n    </div>\r\n</div>*/\r\n","import React from \"react\";\r\nimport s from './MyPosts.module.css';\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {InputForm} from \"../../common/FormsControls/FormsContorls\";\r\nimport {Button, Col, Row} from \"antd\";\r\nimport {maxLength} from \"../../../utils/validators/validators\";\r\n\r\nconst maxLength200 = maxLength(200);\r\n\r\nconst MyPostsForm = (props) => {\r\n    const textAreaStyle = {\r\n        resize: 'none'\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Row>\r\n                <Col span={24} className={s.myPostField}>\r\n                    <Field component={InputForm} validate={[maxLength200]} inputType={'textArea'}\r\n                           name={'postMessage'} inputStyle={textAreaStyle}\r\n                           rows={4}\r\n                           placeholder={'Start writing your post...'}/>\r\n                    <div>\r\n                        <Button htmlType={'submit'} type=\"primary\">Add post</Button>\r\n                    </div>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </form>);\r\n}\r\n\r\nconst MyPostsFormRedux = reduxForm({form: \"myPosts\"})(MyPostsForm);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    const userId = props.profilePage.profile.userId;\r\n    const postData = props.profilePage.postData;\r\n    const postElements = postData.map(p => (<Post\r\n        key={p.id}\r\n        message={p.message}\r\n        likeCounter={p.likeCount}\r\n        fullName={props.profilePage.profile.fullName}\r\n        photo={props.profilePage.profile.photos.small}\r\n    />));\r\n\r\n    const addPostHandler = (value) => {\r\n        props.addPost(value.postMessage);\r\n    }\r\n    return (\r\n        <div>\r\n            {userId === props.Id ? <MyPostsFormRedux onSubmit={addPostHandler}/> : <div style={{height: '20px'}}></div>}\r\n            <Row className={s.posts}>\r\n                <Col span={24}>\r\n                    {postElements}\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","\r\nimport {addPost} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage,\r\n        Id: state.authData.id\r\n    }\r\n};\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, {addPost})(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from \"react\";\r\n/*import s from './Profile.module.css';*/\r\nimport ProfileInfo from \"./ProfileInfo/Profileinfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div /*className={s.content}*/>\r\n            <ProfileInfo  saveProfile = {props.saveProfile} myId={props.myId} profile={props.profile}\r\n                          status={props.status} updateStatus={props.updateStatus} changePhoto={props.changePhoto}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, {useEffect, useState} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {\r\n    getStatus,\r\n    getUsersProfile,\r\n    setUserProfile,\r\n    updateStatus,\r\n    changePhoto,\r\n    saveProfile\r\n} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withRouter} from \"react-router\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\n\r\nconst ProfileContainer = (props) => { /*My Id 7628*/\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const idFormUrl = props.match.params.userId;\r\n    const userId = idFormUrl || props.myId;\r\n    useEffect(() => {\r\n        if (userId) {\r\n            setIsLoading(true);\r\n            Promise.all([\r\n                props.getUsersProfile(userId),// Receiving profile data (img, name etc.) for user by his id (API)\r\n                props.getStatus(userId)  // Receiving status for user by his id (API)\r\n            ]).then(() => {\r\n                setIsLoading(false);\r\n            })\r\n\r\n        } else {\r\n            props.history.push(\"/login\"); // If you are not authorized on site this will redirect you to /login page\r\n        }\r\n    }, [userId])\r\n\r\n    return isLoading ? <Preloader/> : <Profile {...props}/>\r\n\r\n}\r\n\r\n//----------------------------------------------------\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    myId: state.authData.id\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            setUserProfile, getUsersProfile,\r\n            getStatus, updateStatus,\r\n            changePhoto, saveProfile\r\n        }),\r\n    withRouter/*,\r\n    withAuthRedirect*/\r\n)(ProfileContainer)\r\n\r\n\r\n/*\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() { /!*My Id 7628*!/\r\n        console.log(this.props.myId);\r\n        const idFormUrl = this.props.match.params.userId;\r\n        this.userId = idFormUrl ? idFormUrl : this.props.myId; // Id from URL\r\n        if (this.userId) {\r\n            this.props.getUsersProfile(this.userId); // Receiving profile data (img, name etc.) for user by his id (API)\r\n            this.props.getStatus(this.userId); // Receiving status for user by his id (API)\r\n        } else {\r\n            this.props.history.push(\"/login\"); // If you not authorized on site this will redirect to /login page\r\n        }\r\n    }\r\n\r\n    render() {\r\n    console.log('render Profile')\r\n        return (\r\n            <Profile {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    myId: state.authData.id\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,\r\n        {\r\n            setUserProfile, getUsersProfile,\r\n            getStatus, updateStatus\r\n        }),\r\n    withRouter/!*,\r\n    withAuthRedirect*!/\r\n)(ProfileContainer)\r\n*/\r\n","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport logo from \"../../assets/img/logo.bmp\"\r\nimport {Layout, Menu} from \"antd\";\r\n\r\nconst {Header} = Layout;\r\n\r\nconst HeaderComponent = (props) => {\r\n    const loginLogout = () => {\r\n        if (props.login) {\r\n            return (\r\n                <Menu style={{float: 'right'}} theme={\"dark\"} mode=\"horizontal\">\r\n                    <Menu.Item key={'1'} onClick={props.logout}>\r\n                        LOGOUT\r\n                    </Menu.Item>\r\n                    <Menu.Item key={'2'} disabled={true}>{props.login}</Menu.Item>\r\n                </Menu>\r\n\r\n            )\r\n        }\r\n        return (\r\n            <Menu style={{float: 'right'}} theme={\"dark\"} mode=\"horizontal\">\r\n                <Menu.Item key={'1'}>\r\n                    <NavLink to='/login'>LOGIN</NavLink>\r\n                </Menu.Item>\r\n            </Menu>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Header className={'header'}>\r\n            <NavLink to={'/profile'}>\r\n                <img className={s.siteLogo} alt={'Loading...'} src={logo}/>\r\n            </NavLink>\r\n\r\n            {loginLogout()}\r\n        </Header>\r\n\r\n    );\r\n}\r\n\r\nexport default HeaderComponent;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'my-app/auth/SET_USER_DATA';\r\nconst SET_CAPTCHA_URL = 'my-app/auth/SET_CAPTCHA_URL';\r\n\r\nlet initialState = { //authData\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaURL: null\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case SET_CAPTCHA_URL: {\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    data: {id, email, login, isAuth}\r\n})\r\n\r\nexport const setCaptchaURL = (captchaURL) => ({\r\n    type: SET_CAPTCHA_URL,\r\n    data: {captchaURL}\r\n})\r\n\r\nexport const getAuth = () => async (dispatch) => {\r\n    let data = await authAPI.getAuthAPI();\r\n    if (data.resultCode === 0) {\r\n        const {id, email, login} = data.data;\r\n        dispatch(setUserData(id, email, login, true));\r\n    } else {\r\n        dispatch(setUserData(null, null, null, false))\r\n    }\r\n}\r\n\r\n\r\nexport const login = (email, password, rememberMe = false, captcha = null) => async (dispatch) => {\r\n    let data = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuth());\r\n    } else {\r\n        if (data.resultCode === 10) {\r\n            dispatch(getCaptchaURL());\r\n        }\r\n        dispatch(stopSubmit('login', {_error: data.messages[0]})); // Sending error message in Login and display error message\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let data = await authAPI.logout();\r\n    if (data.resultCode === 0) {\r\n        dispatch(getAuth());\r\n    } else {\r\n        console.error('Cannot get response from API for LOGOUT');\r\n    }\r\n}\r\n\r\nexport const getCaptchaURL = () => async (dispatch) => {\r\n    let data = await securityAPI.getCaptchaURL();\r\n    dispatch(setCaptchaURL(data.url))\r\n}\r\n\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {getAuth, logout, setUserData} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    login: state.authData.login,\r\n    isAuth: state.authData.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {setUserData, getAuth, logout})(HeaderContainer);","import React from \"react\";\r\nimport {reduxForm, Field} from \"redux-form\";\r\nimport {maxLength, required} from \"../../utils/validators/validators\";\r\nimport {CheckboxForm, InputForm} from \"../common/FormsControls/FormsContorls\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router\";\r\nimport style from \"../common/FormsControls/FormsContorls.module.css\";\r\nimport {Alert, Button, Divider, Form} from \"antd\";\r\n\r\n\r\nconst maxLength40 = maxLength(40);\r\n\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    const wrapperCol = {  // Set size for form by using antd grid system\r\n        span: 8,\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'email'} wrapperCol={wrapperCol} validate={[required, maxLength40]} placeholder={'Login'}\r\n                       inputType={'input'}\r\n                       component={InputForm}\r\n                inputStyle={{marginBottom:'1%'}}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'password'} type={'password'} validate={[required, maxLength40]} wrapperCol={wrapperCol}\r\n                       placeholder={'Password'}\r\n                       inputType={'input'}\r\n                       component={InputForm}/>\r\n            </div>\r\n            <div>\r\n                <Field name={'rememberMe'} type={'checkbox'} component={CheckboxForm} checkboxDescription={'Remember me'}/>\r\n            </div>\r\n            {props.captchaURL && <img alt={'Loading...'} src={props.captchaURL}/>}\r\n            {props.captchaURL &&\r\n            <Field name={'captcha'}  validate={[required]} placeholder={'Enter captcha'}\r\n                   inputType={'input'}\r\n                   component={InputForm}/>}\r\n            {props.error && <Alert\r\n                message=\"Failed\"\r\n                description={props.error}\r\n                type=\"error\"\r\n                closable\r\n                className={style.serverError}\r\n            />}\r\n            <div>\r\n                <Form.Item>\r\n                    <Button type={'primary'} htmlType={'submit'}>Login\r\n                    </Button>\r\n                </Form.Item>\r\n            </div>\r\n        </form>\r\n\r\n    );\r\n}\r\n\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth === true) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Divider orientation={'left'}>Login</Divider>\r\n            <LoginReduxForm captchaURL={props.captchaURL} onSubmit={onSubmit}/>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.authData.isAuth,\r\n        captchaURL: state.authData.captchaURL\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import {getAuth} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'my-app/app/INITIALIZED_SUCCESS';\r\n\r\nlet initialState = { //appData\r\n    initialized: false\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            let stateCopy =  {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n            return stateCopy;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALIZED_SUCCESS\r\n})\r\n\r\nexport const initializingProcess = () => {\r\n    return async (dispatch) => {\r\n     await dispatch(getAuth());\r\n     dispatch(initializedSuccess());\r\n    }\r\n}\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from \"./Components/Navbar/Navbar\";\r\nimport { HashRouter, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport News from \"./Components/News/News\";\r\nimport Music from \"./Components/Music/Music\";\r\nimport Settings from \"./Components/Settings/Settings\";\r\nimport UsersContainer from \"./Components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./Components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\r\nimport Login from \"./Components/Login/Login\";\r\nimport {initializingProcess} from \"./redux/app-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport Preloader from \"./Components/common/Preloader/Preloader\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport {Layout} from \"antd\";\r\n\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./Components/Dialogs/DialogsContainer\"));\r\nconst {Content,Sider} = Layout;\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializingProcess();\r\n    }\r\n    render() {\r\n        if (!this.props.initialized) {\r\n            return <Preloader/>\r\n        }\r\n\r\n\r\n\r\n        return (\r\n            <HashRouter> {/*HashRouter only for deploying on gitHub hosting*/}\r\n                <Layout style={{minHeight: '100vh', margin: 'auto', backgroundColor:'white'}}>\r\n                    <HeaderContainer/>\r\n                    <Layout style={{width: '80%', margin: 'auto'}}>\r\n                        <Sider width={200}/>\r\n                        <Navbar/>\r\n                        <Content style={{margin: '1%', padding:'1%'}}>\r\n                            <Switch>\r\n                                <Route render={() =>\r\n                                    <ProfileContainer/>} path='/profile/:userId?'/>\r\n                                <Route render={withSuspense(DialogsContainer)} path='/dialogs'/>\r\n                                <Route render={News} path='/news'/>\r\n                                <Route render={Music} path='/music'/>\r\n                                <Route render={Settings} path='/settings'/>\r\n                                <Route render={() =>\r\n                                    <UsersContainer/>} path='/users'/>\r\n                                <Route render={() =>\r\n                                    <Login/>} path='/login'/>\r\n                                <Redirect exact from=\"/\" to=\"/profile\"/>\r\n                                <Route path='*'\r\n                                       render={() => <div>404 NOT FOUND</div>}/>\r\n                            </Switch>\r\n                        </Content>\r\n                    </Layout>\r\n                </Layout>\r\n            </HashRouter>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (state) => ({\r\n    initialized: state.appData.initialized\r\n})\r\n\r\nexport default compose(\r\n    connect(mapDispatchToProps, {initializingProcess})\r\n)(App);","import React from \"react\";\r\nimport Preloader from \"../Components/common/Preloader/Preloader\";\r\n\r\n\r\n/*export const withSuspense = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            return <React.Suspense fallback={<Preloader/>}>\r\n                <Component {...this.props}/>\r\n            </React.Suspense>\r\n        }\r\n    }\r\n    return RedirectComponent;\r\n}*/\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props) => {\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n}\r\n\r\n\r\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport userReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    dialogs: dialogsReducer ,\r\n    profilePage: profileReducer,\r\n    usersPage: userReducer,\r\n    authData: authReducer,\r\n    form: formReducer,\r\n    appData: appReducer\r\n})\r\n\r\n/*let store = createStore(reducers, applyMiddleware(thunkMiddleware));*/\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\n\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n//window.store = store;\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from \"./App\";\r\nimport store from \"./redux/redux-store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImg\":\"Profileinfo_profileImg__3AICu\",\"userName\":\"Profileinfo_userName__2Wlz5\",\"statusAndName\":\"Profileinfo_statusAndName__3GG_n\",\"profileInfo\":\"Profileinfo_profileInfo__fgTxQ\",\"avaNameStatus\":\"Profileinfo_avaNameStatus__1wwhN\"};"],"sourceRoot":""}